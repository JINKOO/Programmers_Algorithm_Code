/*
   #. [프로그래머스 숫자 게임 Level 3 ]
   
   #. 문제 설명
      xx 회사의 2xN명의 사원들은 N명씩 두 팀으로 나눠 숫자 게임을 하려고 합니다. 두 개의 팀을 각각 A팀과 B팀이라고 하겠습니다. 숫자 게임의 규칙은 다음과 같습니다.
      먼저 모든 사원이 무작위로 자연수를 하나씩 부여받습니다.
      각 사원은 딱 한 번씩 경기를 합니다.
      각 경기당 A팀에서 한 사원이, B팀에서 한 사원이 나와 서로의 수를 공개합니다. 
      그때 숫자가 큰 쪽이 승리하게 되고, 승리한 사원이 속한 팀은 승점을 1점 얻게 됩니다.
      만약 숫자가 같다면 누구도 승점을 얻지 않습니다.
      전체 사원들은 우선 무작위로 자연수를 하나씩 부여받았습니다. 
      그 다음 A팀은 빠르게 출전순서를 정했고 자신들의 출전 순서를 B팀에게 공개해버렸습니다. 
      B팀은 그것을 보고 자신들의 최종 승점을 가장 높이는 방법으로 팀원들의 출전 순서를 정했습니다. 이때의 B팀이 얻는 승점을 구해주세요.
      
      A 팀원들이 부여받은 수가 출전 순서대로 나열되어있는 배열 A와 
      i번째 원소가 B팀의 i번 팀원이 부여받은 수를 의미하는 배열 B가 주어질 때, B 팀원들이 얻을 수 있는 최대 승점을 return 하도록 solution 함수를 완성해주세요.
      
  #. 제한사항
     - A와 B의 길이는 같습니다.
     - A와 B의 길이는 1 이상 100,000 이하입니다.
     - A와 B의 각 원소는 1 이상 1,000,000,000 이하의 자연수입니다.
     
  #. 입출력 예
            A	        B	 result
     [5,1,3,7]	[2,2,6,8]	      3
     [2,2,2,2]	[1,1,1,1]	      0
     
  #. 입출력 예 설명
     입출력 예 #1
     A 팀은 숫자 5를 부여받은 팀원이 첫번째로 출전하고, 이어서 1,3,7을 부여받은 팀원들이 차례대로 출전합니다.
     B 팀원들을 4번, 2번, 3번, 1번의 순서대로 출전시킬 경우 팀원들이 부여받은 숫자들은 차례대로 8,2,6,2가 됩니다. 
     그러면, 첫 번째, 두 번째, 세 번째 경기에서 승리하여 3점을 얻게 되고, 이때가 최대의 승점입니다.
     
  #. 입출력 예 #2
     B 팀원들을 어떤 순서로 출전시켜도 B팀의 승점은 0점입니다.
*/

#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
using namespace std;

/*
   #. 그리디 문제였다.
      가장 큰 점수끼리 비교하는데 
      A의 점수가 더 크면, A의 다음 점수와 B의 점수를 비교하다.
      B의 점수가 더 크면, answer++


*/
int solution(vector<int> A, vector<int> B) 
{
    int answer = 0;
    //
    sort(A.begin(), A.end(), greater<int>());
    sort(B.begin(), B.end(), greater<int>());

    int a_index = 0;
    int b_index = 0;

    //A의 가장 작은 점수가 B의 최대 점수보다 크거나 같으면, B는 승점을 절대 얻을 수 없다.
    if (A[A.size() - 1] >= B[0])
        return 0;

    for (int i = 0; i < A.size(); i++)
    {
        //승점을 얻는 경우.
        if (A[a_index] < B[b_index])
        {
            answer++;
            b_index++;
        }
        a_index++;
    }
    //
    return answer;
}

int main()
{
    cout << solution({ 5,1,3,7 }, {2, 2, 6 , 8}) << "\n";
    cout << solution({ 2, 2, 2, 2 }, { 1, 1, 1, 1 }) << "\n";

    return 0;
}